{"version":3,"sources":["store/reducers/auth/types.ts","hooks/useTypedSelector.ts","utils/date.ts","components/Eventcalendar.tsx","utils/rules.ts","components/EventForm.tsx","api/UserService.ts","store/reducers/auth/action-creators.ts","store/reducers/event/types.ts","store/reducers/event/actionCreators.ts","router/index.ts","store/reducers/actionCreators.ts","hooks/useActions.ts","pages/Event.tsx","components/loginForm.tsx","pages/Login.tsx","components/AppRouter.tsx","components/Navbar.tsx","App.tsx","store/reducers/auth/index.ts","store/reducers/event/index.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["AuthActionEnum","useTypedSelector","useSelector","formatDate","date","year","getFullYear","month","getMonth","day","getDate","EventCalendar","props","dateCellRender","value","formateDate","toDate","currentDayEvents","events","filter","ev","map","idx","description","rules","message","required","validator","_","isSameOrAfter","moment","Promise","resolve","reject","Error","EventForm","useState","autor","guest","event","setEvent","user","state","auth","onFinish","submit","username","Item","label","name","onChange","e","target","selectDate","style","width","guests","Option","justify","type","htmlType","UserService","axios","get","EventActionEnum","AuthActionCreators","setIsAuth","SET_AUTH","payload","setUser","SET_USER","setEror","error","SET_ERROR","setLoad","load","SET_IS_LOADING","login","pasword","dispatch","a","setTimeout","getUsers","response","mockUser","data","find","password","localStorage","setItem","logout","removeItem","RouteNames","EventActionCreators","setGuests","SET_GUESTS","setEvents","SET_EVENTS","fetchGuests","console","log","createEvent","getItem","json","JSON","parse","push","stringify","fetchEvents","userName","currentUserEvents","allActionCreators","useActions","useDispatch","bindActionCreators","Event","isModalVisible","setIsModalVisible","useEffect","onClick","title","visible","footer","onCancel","LoginForm","isError","isLoading","setUsername","setPassword","color","fontSize","wrapperCol","offset","span","loading","Login","align","className","publicRoutes","path","LOGIN","exact","component","privateRoutes","EVENT","AppRouter","isAuth","route","to","Navbar","router","useHistory","Header","theme","mode","selectable","App","Content","defaultState","initialState","action","rootReducer","combineReducers","reducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.68595b1a.chunk.js","sourcesContent":["import { iUser } from \"../../../models/iUser\";\n\nexport interface iAuthState {\n  isAuth: boolean;\n  user: iUser;\n  isLoading: boolean;\n  isError: null | string;\n}\n\nexport enum AuthActionEnum {\n  SET_AUTH = \"SET_AUTH\",\n  SET_ERROR = \"SET_ERROR\",\n  SET_USER = \"SET_USER\",\n  SET_IS_LOADING = \"SET_IS_LOADING\",\n}\n\nexport interface iSetAuthAction {\n  type: AuthActionEnum.SET_AUTH;\n  payload: boolean;\n}\nexport interface iSetErrorAction {\n  type: AuthActionEnum.SET_ERROR;\n  payload: string;\n}\nexport interface iSetUserAction {\n  type: AuthActionEnum.SET_USER;\n  payload: iUser;\n}\nexport interface iSetLoadAction {\n  type: AuthActionEnum.SET_IS_LOADING;\n  payload: boolean;\n}\n\nexport type AuthAction =\n  | iSetAuthAction\n  | iSetErrorAction\n  | iSetUserAction\n  | iSetLoadAction;\n","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\nimport { RootState } from \"../store\";\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n","export const formatDate = (date: Date): string => {\n  const year = date.getFullYear();\n  const month =\n    date.getMonth() < 10 ? `0${date.getMonth() + 1}` : date.getMonth() + 1;\n  const day = date.getDate() < 10 ? `0${date.getDate()}` : date.getDate();\n  return `${year}.${month}.${day}`;\n};\n","import { Calendar } from \"antd\";\nimport { Moment } from \"moment\";\nimport React from \"react\";\nimport { iEvent } from \"../models/iEvent\";\nimport { formatDate } from \"../utils/date\";\n\ninterface EventCalendarProps {\n  events: iEvent[];\n}\n\nexport const EventCalendar: React.FC<EventCalendarProps> = (props) => {\n\n  function dateCellRender(value: Moment) {\n    const formateDate = formatDate(value.toDate())\n    const currentDayEvents = props.events.filter(ev => ev.date === formateDate)\n    return (\n      <div>\n        {currentDayEvents.map((ev, idx) =>\n          <div key={idx}>{ev.description}</div>)}\n      </div>\n    );\n  }\n\n  return (\n    <Calendar\n      dateCellRender={dateCellRender} />\n  )\n}","import moment, { Moment } from \"moment\";\n\nexport const rules = {\n  require: (message: string = \"Обязательное поле\") => ({\n    required: true,\n    message,\n  }),\n  isDateAfter: (message: string) => () => ({\n    validator(_: any, value: Moment) {\n      if (value.isSameOrAfter(moment())) {\n        return Promise.resolve();\n      }\n      return Promise.reject(new Error(message));\n    },\n  }),\n};\n","import { Button, DatePicker, Form, Input, Row, Select } from 'antd';\nimport { Moment } from 'moment';\nimport { useState } from 'react';\nimport { useTypedSelector } from '../hooks/useTypedSelector';\nimport { iEvent } from '../models/iEvent';\nimport { iUser } from '../models/iUser';\nimport { formatDate } from '../utils/date';\nimport { rules } from '../utils/rules';\n\ninterface EventFormProps {\n  guests: iUser[];\n  submit: (event: iEvent) => void\n}\n\nexport const EventForm: React.FC<EventFormProps> = (props) => {\n  const [event, setEvent] = useState<iEvent>({\n    autor: '',\n    guest: '',\n    date: '',\n    description: '',\n  } as iEvent);\n\n  const selectDate = (date: Moment | null) => {\n    if (date) {\n      setEvent({ ...event, date: formatDate(date?.toDate()) });\n    }\n  }\n  const { user } = useTypedSelector(state => state.auth)\n\n  const submitForm = () => {\n    props.submit({ ...event, autor: user.username });\n\n  }\n\n  return (\n    <Form onFinish={() => submitForm()}>\n\n      <Form.Item\n        label=\"Описание события\"\n        name=\"description\"\n        rules={[rules.require()]}\n      >\n        <Input\n          onChange={e => setEvent({ ...event, description: e.target.value })}\n          value={event.description} />\n\n      </Form.Item>\n\n      <Form.Item\n        label=\"Дата события\"\n        name=\"date\"\n        rules={[rules.require(), rules.isDateAfter('Нельзя создать дату из прошлого')]}>\n        <DatePicker\n          onChange={(date) => selectDate(date)}\n        />\n      </Form.Item>\n\n      <Form.Item\n        label=\"пользователи\"\n        name=\"users\"\n        rules={[rules.require()]}\n      >\n        <Select style={{ width: 120 }} onChange={(guest: string) => (setEvent({ ...event, guest }))}>\n          {props.guests.map(guest =>\n            <Select.Option key={guest.username} value={guest.username}>{guest.username}</Select.Option>\n          )}\n\n        </Select>\n      </Form.Item>\n      <Row justify='end'>\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\">\n            Создать\n          </Button>\n        </Form.Item>\n      </Row>\n    </Form>\n  )\n}","import axios, { AxiosResponse } from \"axios\";\nimport { iUser } from \"../models/iUser\";\n\nexport default class UserService {\n  static async getUsers(): Promise<AxiosResponse<iUser[]>> {\n    return axios.get<iUser[]>(\"./users.json\");\n  }\n}\n","import { AppDispatch } from \"../..\";\nimport UserService from \"../../../api/UserService\";\nimport { iUser } from \"../../../models/iUser\";\nimport {\n  AuthActionEnum,\n  iSetAuthAction,\n  iSetErrorAction,\n  iSetLoadAction,\n  iSetUserAction,\n} from \"./types\";\n\nexport const AuthActionCreators = {\n  setIsAuth: (auth: boolean): iSetAuthAction => ({\n    type: AuthActionEnum.SET_AUTH,\n    payload: auth,\n  }),\n  setUser: (user: iUser): iSetUserAction => ({\n    type: AuthActionEnum.SET_USER,\n    payload: user,\n  }),\n  setEror: (error: string): iSetErrorAction => ({\n    type: AuthActionEnum.SET_ERROR,\n    payload: error,\n  }),\n  setLoad: (load: boolean): iSetLoadAction => ({\n    type: AuthActionEnum.SET_IS_LOADING,\n    payload: load,\n  }),\n  login:\n    (username: string, pasword: string) => async (dispatch: AppDispatch) => {\n      try {\n        dispatch(AuthActionCreators.setLoad(true));\n        setTimeout(async () => {\n          const response = await UserService.getUsers();\n          const mockUser = response.data.find(\n            (user) => user.username === username && user.password === pasword\n          );\n          if (mockUser) {\n            localStorage.setItem(\"auth\", \"true\");\n            localStorage.setItem(\"username\", mockUser.username);\n            dispatch(AuthActionCreators.setUser(mockUser));\n            dispatch(AuthActionCreators.setIsAuth(true));\n          } else {\n            dispatch(\n              AuthActionCreators.setEror(\"Некорректный логин или пароль\")\n            );\n          }\n        }, 1000);\n\n        dispatch(AuthActionCreators.setLoad(false));\n      } catch (error) {\n        dispatch(AuthActionCreators.setEror(\"Ошибка аутентификации\"));\n      }\n    },\n  logout: () => async (dispatch: AppDispatch) => {\n    localStorage.removeItem(\"auth\");\n    localStorage.removeItem(\"username\");\n    dispatch(AuthActionCreators.setUser({} as iUser));\n    dispatch(AuthActionCreators.setIsAuth(false));\n  },\n};\n","import { iEvent } from \"../../../models/iEvent\";\nimport { iUser } from \"../../../models/iUser\";\n\nexport interface EventState {\n  guests: iUser[];\n  events: iEvent[];\n}\n\nexport enum EventActionEnum {\n  SET_GUESTS = \"SET_GUESTS\",\n  SET_EVENTS = \"SET_EVENTS\",\n}\n\nexport interface SetGuestAction {\n  type: EventActionEnum.SET_GUESTS;\n  payload: iUser[];\n}\nexport interface SetEventAction {\n  type: EventActionEnum.SET_EVENTS;\n  payload: iEvent[];\n}\n\nexport type EventAction = SetGuestAction | SetEventAction;\n","import { AppDispatch } from \"../..\";\nimport UserService from \"../../../api/UserService\";\nimport { iEvent } from \"../../../models/iEvent\";\nimport { iUser } from \"../../../models/iUser\";\nimport { EventActionEnum, SetEventAction, SetGuestAction } from \"./types\";\n\nexport const EventActionCreators = {\n  setGuests: (guests: iUser[]): SetGuestAction => ({\n    type: EventActionEnum.SET_GUESTS,\n    payload: guests,\n  }),\n  setEvents: (events: iEvent[]): SetEventAction => ({\n    type: EventActionEnum.SET_EVENTS,\n    payload: events,\n  }),\n  fetchGuests: () => async (dispatch: AppDispatch) => {\n    try {\n      const response = await UserService.getUsers();\n      dispatch(EventActionCreators.setGuests(response.data));\n    } catch (error) {\n      console.log(error);\n    }\n  },\n  createEvent: (event: iEvent) => async (dispatch: AppDispatch) => {\n    try {\n      const events = localStorage.getItem(\"events\") || \"[]\";\n      const json = JSON.parse(events) as iEvent[];\n      json.push(event);\n      dispatch(EventActionCreators.setEvents(json));\n      localStorage.setItem(\"events\", JSON.stringify(json));\n    } catch (error) {\n      console.log(error);\n    }\n  },\n  fetchEvents: (userName: string) => async (dispatch: AppDispatch) => {\n    try {\n      const events = localStorage.getItem(\"events\") || \"[]\";\n      const json = JSON.parse(events) as iEvent[];\n      const currentUserEvents = json.filter(\n        (ev) => ev.autor === userName || ev.guest === userName\n      );\n      dispatch(EventActionCreators.setEvents(currentUserEvents));\n    } catch (e) {\n      console.log(e);\n    }\n  },\n};\n","import React from \"react\";\nimport Event from \"../pages/Event\";\nimport Login from \"../pages/Login\";\n\nexport interface iRoute {\n  path: string;\n  component: React.ComponentType;\n  exact?: boolean;\n}\n\nexport enum RouteNames {\n  LOGIN = \"/login\",\n  EVENT = \"/\",\n}\n\nexport const publicRoutes: iRoute[] = [\n  {\n    path: RouteNames.LOGIN,\n    exact: true,\n    component: Login,\n  },\n];\nexport const privateRoutes: iRoute[] = [\n  {\n    path: RouteNames.EVENT,\n    exact: true,\n    component: Event,\n  },\n];\n","import { AuthActionCreators } from \"./auth/action-creators\";\nimport { EventActionCreators } from \"./event/actionCreators\";\n\nexport const allActionCreators = {\n  ...AuthActionCreators,\n  ...EventActionCreators,\n};\n","import { useDispatch } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { allActionCreators } from \"../store/reducers/actionCreators\";\n\nexport const useActions = () => {\n  const dispatch = useDispatch();\n  return bindActionCreators(allActionCreators, dispatch);\n};\n","import { Button, Layout, Modal, Row } from 'antd'\nimport React, { useEffect, useState } from 'react'\nimport { EventCalendar } from '../components/Eventcalendar'\nimport { EventForm } from '../components/EventForm'\nimport { useActions } from '../hooks/useActions'\nimport { useTypedSelector } from '../hooks/useTypedSelector'\nimport { iEvent } from '../models/iEvent'\n\nconst Event: React.FC = () => {\n  const [isModalVisible, setIsModalVisible] = useState(false)\n  const { guests, events } = useTypedSelector(state => state.event)\n  const { user } = useTypedSelector(state => state.auth)\n\n  const { fetchGuests, createEvent, fetchEvents } = useActions()\n\n  useEffect(() => {\n    fetchGuests()\n    fetchEvents(user.username)\n  }, [])\n\n  const addNewEvent = (event: iEvent) => {\n    setIsModalVisible(false)\n    createEvent(event)\n  }\n\n  return (\n    <Layout>\n\n      <EventCalendar events={events} />\n      <Row justify='center'>\n        <Button\n          onClick={() => setIsModalVisible(true)}>\n          Добавить событие\n        </Button>\n      </Row>\n      <Modal\n        title=\"Добавить событие\"\n        visible={isModalVisible}\n        footer={null}\n        onCancel={() => setIsModalVisible(false)}>\n        <EventForm\n          guests={guests}\n          submit={addNewEvent} />\n\n      </Modal>\n    </Layout>\n  )\n}\n\nexport default Event","import React, { useState } from \"react\"\nimport { rules } from \"../utils/rules\";\nimport { Form, Input, Button } from 'antd';\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\nimport { useActions } from \"../hooks/useActions\";\n\nconst LoginForm: React.FC = () => {\n  const { login } = useActions()\n  const { isError, isLoading } = useTypedSelector(state => state.auth)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const submit = () => {\n    login(username, password)\n  }\n\n  return (\n    <Form onFinish={submit}>\n      {isError && <div style={{ color: 'red', fontSize: '16px' }}>{isError}</div>}\n      <Form.Item\n        label=\"Имя пользователя\"\n        name=\"username\"\n        rules={[rules.require('Пожалуйста введите имя пользователя')]}\n      >\n        <Input\n          value={username}\n          onChange={e => setUsername(e.target.value)}\n        />\n      </Form.Item>\n      <Form.Item\n        label=\"Пароль\"\n        name=\"password\"\n        rules={[rules.require('Пожалуйста введите пароль')]}\n      >\n        <Input\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n          type={'password'}\n        />\n      </Form.Item>\n      <Form.Item\n        wrapperCol={{ offset: 8, span: 16 }}\n      >\n        <Button\n          loading={isLoading}\n          type=\"primary\"\n          htmlType=\"submit\">\n          Войти\n        </Button>\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default LoginForm","import { Layout, Row, Card } from 'antd'\nimport React from 'react'\nimport LoginForm from '../components/loginForm'\n\nconst Login: React.FC = () => {\n  return (\n    <div>\n      <Layout>\n        <Row justify='center' align='middle' className='h100'>\n          <Card>\n            <LoginForm />\n          </Card>\n        </Row>\n      </Layout>\n    </div>\n  )\n}\n\nexport default Login","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\nimport { privateRoutes, publicRoutes, RouteNames } from \"../router\";\n\nconst AppRouter: React.FC = () => {\n  const { isAuth } = useTypedSelector(state => state.auth)\n  return (\n    isAuth ?\n      <Switch>\n        {\n          privateRoutes.map(route =>\n            <Route path={route.path}\n              exact={route.exact}\n              component={route.component}\n              key={route.path}\n            />)\n        }\n        <Redirect to={RouteNames.EVENT} />\n      </Switch>\n      :\n      <Switch>\n        {\n          publicRoutes.map(route =>\n            <Route path={route.path}\n              component={route.component}\n              exact={route.exact}\n              key={route.path}\n            />)\n        }\n        <Redirect to={RouteNames.LOGIN} />\n      </Switch>\n  )\n}\n\nexport default AppRouter","import { Layout, Menu, Row, } from 'antd'\nimport React from 'react'\nimport { useHistory } from 'react-router'\nimport { useActions } from '../hooks/useActions'\nimport { useTypedSelector } from '../hooks/useTypedSelector'\nimport { RouteNames } from '../router'\n\nconst Navbar: React.FC = () => {\n  const { logout } = useActions()\n  const router = useHistory()\n  const { isAuth, user } = useTypedSelector(state => state.auth)\n  return (\n    <Layout.Header>\n      <Row justify='end'>\n        {\n          isAuth ?\n            <>\n              <div style={{ color: 'white', fontSize: '16px' }}>{user.username}</div>\n              <Menu theme=\"dark\" mode=\"horizontal\" selectable={false}>\n                <Menu.Item\n                  onClick={logout}\n                  key=\"1\"\n                >\n                  LOGOUT\n                </Menu.Item>\n              </Menu>\n            </>\n\n            :\n\n            <>\n              <Menu theme=\"dark\" mode=\"horizontal\" selectable={false}>\n                <Menu.Item\n                  onClick={() => router.push(RouteNames.LOGIN)}\n                  key=\"1\"\n                >\n                  LOGIN\n                </Menu.Item>\n              </Menu>\n            </>\n        }\n      </Row>\n    </Layout.Header>\n\n\n  )\n}\n\nexport default Navbar\n\n","import { Layout } from \"antd\";\nimport React, { useEffect } from \"react\";\nimport AppRouter from \"./components/AppRouter\";\nimport Navbar from \"./components/Navbar\";\nimport \"./App.css\";\nimport { useActions } from \"./hooks/useActions\";\nimport { iUser } from \"./models/iUser\";\n\nconst App: React.FC = () => {\n  const { setUser, setIsAuth } = useActions();\n\n  useEffect(() => {\n    if (localStorage.getItem(\"auth\")) {\n      setUser({ username: localStorage.getItem(\"username\" || \"\") } as iUser);\n      setIsAuth(true);\n    }\n  }, []);\n\n  return (\n    <Layout>\n      <Navbar />\n      <Layout.Content>\n        <AppRouter />\n      </Layout.Content>\n    </Layout>\n  );\n};\n\nexport default App;\n","import { iUser } from \"../../../models/iUser\";\nimport { AuthAction, iAuthState, AuthActionEnum } from \"./types\";\n\nconst defaultState: iAuthState = {\n  isAuth: false,\n  user: {} as iUser,\n  isLoading: false,\n  isError: null,\n};\n\nexport default function authReducer(\n  state = defaultState,\n  action: AuthAction\n): iAuthState {\n  switch (action.type) {\n    case AuthActionEnum.SET_AUTH:\n      return {\n        ...state,\n        isAuth: action.payload,\n        isLoading: false,\n      };\n    case AuthActionEnum.SET_ERROR:\n      return {\n        ...state,\n        isError: action.payload,\n        isLoading: false,\n      };\n    case AuthActionEnum.SET_USER:\n      return {\n        ...state,\n        user: action.payload,\n      };\n    case AuthActionEnum.SET_IS_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { iEvent } from \"../../../models/iEvent\";\nimport { iUser } from \"../../../models/iUser\";\nimport { EventAction, EventActionEnum, EventState } from \"./types\";\n\nconst initialState: EventState = {\n  guests: [] as iUser[],\n  events: [] as iEvent[],\n};\n\nexport default function EventReducer(\n  state = initialState,\n  action: EventAction\n): EventState {\n  switch (action.type) {\n    case EventActionEnum.SET_GUESTS:\n      return {\n        ...state,\n        guests: action.payload,\n      };\n    case EventActionEnum.SET_EVENTS:\n      return {\n        ...state,\n        events: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import auth from \"./auth\";\nimport event from \"./event\";\n\nexport default {\n  auth,\n  event,\n};\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./reducers\";\n\nconst rootReducer = combineReducers(reducers);\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport { store } from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App></App>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}